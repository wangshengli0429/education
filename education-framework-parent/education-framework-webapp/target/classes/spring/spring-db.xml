<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-4.3.xsd 
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">
    <!-- 数据源c3p0 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${mysql.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
    </bean>
    <!-- sessionFactory 将spring和mybatis整合 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />    <!-- 加载mapper文件 -->
    </bean>
    
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
<!--    		<property name="dataSource" > -->
<!--      		<ref local="dataSource"/> -->
<!--    		</property> -->
   		<property name="dataSource" ref="dataSource"></property>
 	</bean>
    
     <!-- 集成Hibernate -->
<!--     <bean id="sessionFactory" -->
<!--         class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> -->

<!--         <property name="dataSource" ref="dataSource" /> -->
<!--         <property name="mappingLocations"> -->
<!--             <list> -->
<!--                 <value>classpath*:/hibernate/**/*.hbm.xml</value> -->
<!--             </list> -->
<!--         </property> -->
<!--         <property name="lobHandler" ref="lobHandler" /> -->
<!--         <property name="hibernateProperties"> -->
<!--             <props> -->
<!--                 <prop key="hibernate.dialect">${hibernate.dialect}</prop> -->
<!--                 <prop key="hibernate.show_sql">${hibernate.show_sql}</prop> -->
<!--                 <prop key="hibernate.format_sql">${hibernate.format_sql}</prop> -->
<!--                 <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop> -->
<!--                 <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop> -->
<!--                 <prop key="hibernate.query.factory_class">${hibernate.query.factory_class}</prop> -->
<!--                 <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop> -->
<!--                 <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop> -->
<!--                 <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop> -->
<!--             </props> -->
<!--         </property> -->
<!-- 	   使用TransactionAwareDataSourceProxy管理事务与ibatis处于同一事务管理下  -->
<!--        <property name="useTransactionAwareDataSource" >  -->
<!--            <value>true</value>  -->
<!--        </property>  -->
<!--     </bean> -->
    

<!-- 	<bean id="nativeJdbcExtractor" lazy-init="true" -->
<!--         class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor"> -->
<!--     </bean> -->
    
<!--      <bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true"> -->
<!--         <property name="nativeJdbcExtractor"> -->
<!--             <ref bean="nativeJdbcExtractor" /> -->
<!--         </property> -->
<!--     </bean> -->
    
    <!-- 事务 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="find" read-only="true" />
            <tx:method name="get" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut expression="execution(* com.education.framework.service..*.*(..))" id="pointCut" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut" />
    </aop:config>
</beans> 