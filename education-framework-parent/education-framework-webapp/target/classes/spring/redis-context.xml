<?xml version="1.0" encoding="UTF-8"?>
  <beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation=" http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/cache 
	http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.3.xsd">
     
  <!-- scanner redis properties  --> 
  <context:property-placeholder location="classpath:config/redis.properties" />
  
  <!-- jedis客户端连接工厂 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="usePool" value="true" />
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<!--最大空闲连接数 -->
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<!--初始化连接数 -->
		<property name="minIdle" value="${redis.pool.minIdle}" />
		<!--对拿到的connection进行validateObject校验 -->
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
		<!--在进行returnObject对返回的connection进行validateObject校验 -->
		<property name="testOnReturn" value="${redis.pool.testOnReturn}" />
		<!--定时对线程池中空闲的链接进行validateObject校验 -->
		<property name="testWhileIdle" value="${redis.pool.testWhileIdle}" />
	</bean>

	<!-- redisTemplate模板 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory">
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>

	<!-- redis缓存管理器 -->
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
		c:redisOperations-ref="redisTemplate">
		<property name="defaultExpiration" value="${redis.defaultExpiration}"></property>
	</bean>
  
<!--   <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">   -->
<!--     <property name="maxIdle" value="${redis.maxIdle}" />   -->
<!--     <property name="maxActive" value="${redis.maxActive}" />   -->
<!--     <property name="maxWait" value="${redis.maxWait}" />   -->
<!--     <property name="testOnBorrow" value="${redis.testOnBorrow}" />   -->
      	
<!--       	<property name="maxIdle" value="${redis.maxIdle}" /> -->
<!--         <property name="maxTotal" value="${redis.maxTotal}" /> -->
<!--         <property name="maxWaitMillis" value="${redis.maxWaitMillis}"></property> -->
<!--         <property name="testOnBorrow" value="${redis.testOnBorrow}" /> -->
<!--   </bean>   -->
    
<!--   <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"   -->
<!--     p:host-name="${redis.host}"  -->
<!--     p:port="${redis.port}"  -->
<!--     p:password="${redis.pass}"   -->
<!--     p:pool-config-ref="poolConfig"/>   -->
    
<!--   <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">   -->
<!--     <property name="connectionFactory"   ref="connectionFactory" />   -->
<!--   </bean>	   -->
   
</beans>	